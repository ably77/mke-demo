---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world
  labels:
    app: hello-world
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hello-world
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      containers:
      - name: echo-server
        image: hashicorp/http-echo
        args:
        - -listen=:80
        - -text="Hello from the hello-world service on Kubernetes running on Mesosphere DC/OS!"
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubernetes.dcos.io/edgelb-pool-name: "dklb"
    kubernetes.dcos.io/edgelb-pool-portmap.80: "10001"
  labels:
    app: hello-world
  name: hello-world
spec:
  type: LoadBalancer
  selector:
    app: hello-world
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: hello-world2
    labels:
      app: hello-world2
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: hello-world2
    template:
      metadata:
        labels:
          app: hello-world2
      spec:
        containers:
        - name: echo-server
          image: hashicorp/http-echo
          args:
          - -listen=:8080
          - -text="Hello from the hello-world2 service on Kubernetes running on Mesosphere DC/OS!"
          ports:
          - containerPort: 8080
---
  apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubernetes.dcos.io/edgelb-pool-name: "dklb"
      kubernetes.dcos.io/edgelb-pool-portmap.8080: "10002"
    labels:
      app: hello-world2
    name: hello-world2
  spec:
    type: LoadBalancer
    selector:
      app: hello-world2
    ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world3
  labels:
    app: hello-world3
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hello-world3
  template:
    metadata:
      labels:
        app: hello-world3
    spec:
      containers:
      - name: echo-server
        image: hashicorp/http-echo
        args:
        - -listen=:8181
        - -text="Hello from the hello-world3 service on Kubernetes running on Mesosphere DC/OS!"
        ports:
        - containerPort: 8181
---
  apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubernetes.dcos.io/edgelb-pool-name: "dklb"
      kubernetes.dcos.io/edgelb-pool-portmap.8181: "10003"
    labels:
      app: hello-world3
    name: hello-world3
  spec:
    type: LoadBalancer
    selector:
      app: hello-world3
    ports:
    - protocol: TCP
      port: 8181
      targetPort: 8181
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: redis
  name: redis
spec:
  containers:
  - name: redis
    image: redis:5.0.3
    ports:
    - name: redis
      containerPort: 6379
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubernetes.dcos.io/edgelb-pool-name: "dklb"
    kubernetes.dcos.io/edgelb-pool-portmap.6379: "16379"
  labels:
    app: redis
  name: redis
spec:
  type: LoadBalancer
  selector:
    app: redis
  ports:
  - protocol: TCP
    port: 6379
    targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dcos-site1
  labels:
    app: dcos-site1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: dcos-site1
  template:
    metadata:
      labels:
        app: dcos-site1
    spec:
      containers:
      - name: dcos-site
        image: mesosphere/dcos-website:cff383e4f5a51bf04e2d0177c5023e7cebcab3cc
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubernetes.dcos.io/edgelb-pool-name: "dklb"
    kubernetes.dcos.io/edgelb-pool-portmap.80: "10004"
  labels:
    app: dcos-site1
  name: dcos-site1
spec:
  type: LoadBalancer
  selector:
    app: dcos-site1
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dcos-site2
  labels:
    app: dcos-site2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: dcos-site2
  template:
    metadata:
      labels:
        app: dcos-site2
    spec:
      containers:
      - name: dcos-site2
        image: mesosphere/dcos-website:cff383e4f5a51bf04e2d0177c5023e7cebcab3cc
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubernetes.dcos.io/edgelb-pool-name: "dklb"
    kubernetes.dcos.io/edgelb-pool-portmap.80: "10005"
  labels:
    app: dcos-site2
  name: dcos-site2
spec:
  type: LoadBalancer
  selector:
    app: dcos-site2
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world4
  labels:
    app: hello-world4
    owner: dklb
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hello-world4
  template:
    metadata:
      labels:
        app: hello-world4
    spec:
      containers:
      - name: echo-server
        image: hashicorp/http-echo
        args:
        - -listen=:80
        - -text="Hello from the hello-world4 service on Kubernetes running on Mesosphere DC/OS!"
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hello-world4
    owner: dklb
  name: hello-world4
spec:
  ports:
  - nodePort: 30908
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: hello-world4
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world5
  labels:
    app: hello-world5
    owner: dklb
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hello-world5
  template:
    metadata:
      labels:
        app: hello-world5
    spec:
      containers:
      - name: echo-server
        image: hashicorp/http-echo
        args:
        - -listen=:80
        - -text="Hello from the hello-world5 service on Kubernetes running on Mesosphere DC/OS!"
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hello-world5
    owner: dklb
  name: hello-world5
spec:
  ports:
  - nodePort: 30909
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: hello-world5
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dcos-site3
  labels:
    app: dcos-site3
spec:
  replicas: 2
  selector:
    matchLabels:
      app: dcos-site3
  template:
    metadata:
      labels:
        app: dcos-site3
    spec:
      containers:
      - name: dcos-site3
        image: mesosphere/dcos-website:cff383e4f5a51bf04e2d0177c5023e7cebcab3cc
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: dcos-site3
    owner: dklb
  name: dcos-site3
spec:
  ports:
  - nodePort: 30910
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: dcos-site3
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: edgelb
    kubernetes.dcos.io/edgelb-pool-name: dklb
    kubernetes.dcos.io/edgelb-pool-port: "80"
  labels:
    owner: dklb
  name: helloworld4-ig
spec:
  rules:
  - host: "mke-l7.ddns.net"
    http:
      paths:
      - backend:
          serviceName: hello-world4
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: edgelb
    kubernetes.dcos.io/edgelb-pool-name: dklb
    kubernetes.dcos.io/edgelb-pool-port: "81"
  labels:
    owner: dklb
  name: helloworld5-ig
spec:
  rules:
  - host: "mke-l7.ddns.net"
    http:
      paths:
      - backend:
          serviceName: hello-world5
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: edgelb
    kubernetes.dcos.io/edgelb-pool-name: dklb
    kubernetes.dcos.io/edgelb-pool-port: "82"
  labels:
    owner: dklb
  name: dcos-site3
spec:
  rules:
  - host: "mke-l7.ddns.net"
    http:
      paths:
      - backend:
          serviceName: dcos-site3
          servicePort: 80
